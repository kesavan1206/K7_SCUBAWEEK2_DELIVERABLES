<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="7" total="21" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-09T01:35:50 IST" name="Suite" finished-at="2021-12-09T01:35:50 IST" duration-ms="339">
    <groups>
      <group name="Group B">
        <method signature="Groupingtng.testcase2()[pri:0, instance:tng.Groupingtng@617fe9e1]" name="testcase2" class="tng.Groupingtng"/>
        <method signature="Groupingtng.testcase2()[pri:0, instance:tng.Groupingtng@6815c5f2]" name="testcase2" class="tng.Groupingtng"/>
        <method signature="Groupingtng.testcase3()[pri:0, instance:tng.Groupingtng@6815c5f2]" name="testcase3" class="tng.Groupingtng"/>
      </group> <!-- Group B -->
      <group name="Group A">
        <method signature="Groupingtng.testcase1()[pri:0, instance:tng.Groupingtng@617fe9e1]" name="testcase1" class="tng.Groupingtng"/>
        <method signature="Groupingtng.testcase2()[pri:0, instance:tng.Groupingtng@617fe9e1]" name="testcase2" class="tng.Groupingtng"/>
        <method signature="Groupingtng.testcase2()[pri:0, instance:tng.Groupingtng@6815c5f2]" name="testcase2" class="tng.Groupingtng"/>
      </group> <!-- Group A -->
      <group name="Group C">
        <method signature="Groupingtng.testcase4()[pri:0, instance:tng.Groupingtng@3a4b0e5d]" name="testcase4" class="tng.Groupingtng"/>
      </group> <!-- Group C -->
    </groups>
    <test started-at="2021-12-09T01:35:50 IST" name="Annotations" finished-at="2021-12-09T01:35:50 IST" duration-ms="118">
      <class name="tng.Annotationstng">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="beforeTest" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="beforeClass" finished-at="2021-12-09T01:35:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="beforeMethod" finished-at="2021-12-09T01:35:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testCase1()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="testCase1" finished-at="2021-12-09T01:35:50 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="afterMethod" finished-at="2021-12-09T01:35:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="beforeMethod" finished-at="2021-12-09T01:35:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testCase2()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="testCase2" finished-at="2021-12-09T01:35:50 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="afterMethod" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="afterClass" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="afterTest" finished-at="2021-12-09T01:35:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tng.Annotationstng -->
    </test> <!-- Annotations -->
    <test started-at="2021-12-09T01:35:50 IST" name="Group A" finished-at="2021-12-09T01:35:50 IST" duration-ms="14">
      <class name="tng.Groupingtng">
        <test-method signature="testcase1()[pri:0, instance:tng.Groupingtng@617fe9e1]" started-at="2021-12-09T01:35:50 IST" name="testcase1" finished-at="2021-12-09T01:35:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:tng.Groupingtng@617fe9e1]" started-at="2021-12-09T01:35:50 IST" name="testcase2" finished-at="2021-12-09T01:35:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
      </class> <!-- tng.Groupingtng -->
    </test> <!-- Group A -->
    <test started-at="2021-12-09T01:35:50 IST" name="Group B" finished-at="2021-12-09T01:35:50 IST" duration-ms="10">
      <class name="tng.Groupingtng">
        <test-method signature="testcase2()[pri:0, instance:tng.Groupingtng@6815c5f2]" started-at="2021-12-09T01:35:50 IST" name="testcase2" finished-at="2021-12-09T01:35:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:tng.Groupingtng@6815c5f2]" started-at="2021-12-09T01:35:50 IST" name="testcase3" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- tng.Groupingtng -->
    </test> <!-- Group B -->
    <test started-at="2021-12-09T01:35:50 IST" name="Group C" finished-at="2021-12-09T01:35:50 IST" duration-ms="5">
      <class name="tng.Groupingtng">
        <test-method signature="testcase4()[pri:0, instance:tng.Groupingtng@3a4b0e5d]" started-at="2021-12-09T01:35:50 IST" name="testcase4" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase4 -->
      </class> <!-- tng.Groupingtng -->
    </test> <!-- Group C -->
    <test started-at="2021-12-09T01:35:50 IST" name="Parameterization" finished-at="2021-12-09T01:35:50 IST" duration-ms="7">
      <class name="tng.Parameterstng">
        <test-method signature="parameterTest(java.lang.String)[pri:0, instance:tng.Parameterstng@687a762c]" started-at="2021-12-09T01:35:50 IST" name="parameterTest" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kesavan Sakthivel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterTest -->
      </class> <!-- tng.Parameterstng -->
    </test> <!-- Parameterization -->
    <test started-at="2021-12-09T01:35:50 IST" name="Assertions" finished-at="2021-12-09T01:35:50 IST" duration-ms="42">
      <class name="tng.Assertionstng">
        <test-method signature="AssertionsEqualsFails()[pri:0, instance:tng.Assertionstng@7889a1ac]" started-at="2021-12-09T01:35:50 IST" name="AssertionsEqualsFails" finished-at="2021-12-09T01:35:50 IST" duration-ms="21" status="FAIL">
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<IamKesav[1]> but was:<IamKesav[]>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<IamKesav[1]> but was:<IamKesav[]>
at org.junit.Assert.assertEquals(Assert.java:117)
at org.junit.Assert.assertEquals(Assert.java:146)
at tng.Assertionstng.AssertionsEqualsFails(Assertionstng.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionsEqualsFails -->
        <test-method signature="AssertionsEqualsPass()[pri:0, instance:tng.Assertionstng@7889a1ac]" started-at="2021-12-09T01:35:50 IST" name="AssertionsEqualsPass" finished-at="2021-12-09T01:35:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionsEqualsPass -->
        <test-method signature="AssertionsNotEqual()[pri:0, instance:tng.Assertionstng@7889a1ac]" started-at="2021-12-09T01:35:50 IST" name="AssertionsNotEqual" finished-at="2021-12-09T01:35:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionsNotEqual -->
        <test-method signature="AssertionsTrue()[pri:0, instance:tng.Assertionstng@7889a1ac]" started-at="2021-12-09T01:35:50 IST" name="AssertionsTrue" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertionsTrue -->
      </class> <!-- tng.Assertionstng -->
    </test> <!-- Assertions -->
    <test started-at="2021-12-09T01:35:50 IST" name="Dataproviders" finished-at="2021-12-09T01:35:50 IST" duration-ms="12">
      <class name="tng.Annotationstng">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:49 IST" name="beforeSuite" finished-at="2021-12-09T01:35:50 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tng.Annotationstng@5118388b]" started-at="2021-12-09T01:35:50 IST" name="afterSuite" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tng.Annotationstng -->
      <class name="tng.Dataproviderstng">
        <test-method signature="testMethod(java.lang.String)[pri:0, instance:tng.Dataproviderstng@2cd2c8fe]" started-at="2021-12-09T01:35:50 IST" name="testMethod" data-provider="data-provider" finished-at="2021-12-09T01:35:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data one]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method signature="testMethod(java.lang.String)[pri:0, instance:tng.Dataproviderstng@2cd2c8fe]" started-at="2021-12-09T01:35:50 IST" name="testMethod" data-provider="data-provider" finished-at="2021-12-09T01:35:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data two]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
      </class> <!-- tng.Dataproviderstng -->
    </test> <!-- Dataproviders -->
  </suite> <!-- Suite -->
</testng-results>
